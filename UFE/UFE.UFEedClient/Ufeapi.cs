// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Detail/ufeapi.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace UFE {

  /// <summary>Holder for reflection information generated from Detail/ufeapi.proto</summary>
  public static partial class UfeapiReflection {

    #region Descriptor
    /// <summary>File descriptor for Detail/ufeapi.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static UfeapiReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChNEZXRhaWwvdWZlYXBpLnByb3RvEgNVRkUitAMKCFVGRUZpZWxkEjAKCGxv",
            "Y2F0aW9uGAEgASgOMh4uVUZFLlVGRUZpZWxkLlVGRUZpZWxkTG9jYXRpb24S",
            "KAoEdHlwZRgCIAEoDjIaLlVGRS5VRkVGaWVsZC5VRkVGaWVsZFR5cGUSCwoD",
            "dGFnGAMgASgNEgwKBGl2YWwYBCABKAMSDAoEZnZhbBgFIAEoARIMCgRidmFs",
            "GAYgASgIEgwKBHN2YWwYByABKAwSHgoEbXZhbBgIIAMoCzIQLlVGRS5XaXJl",
            "TWVzc2FnZSJNChBVRkVGaWVsZExvY2F0aW9uEgsKB2ZsX2JvZHkQABINCglm",
            "bF9oZWFkZXIQARIOCgpmbF90cmFpbGVyEAISDQoJZmxfc3lzdGVtEAMilwEK",
            "DFVGRUZpZWxkVHlwZRIOCgpmdF91bmtub3duEAASCgoGZnRfaW50EAESCwoH",
            "ZnRfY2hhchACEg0KCWZ0X2RvdWJsZRADEg0KCWZ0X3N0cmluZxAEEgsKB2Z0",
            "X2Jvb2wQBRILCgdmdF90aW1lEAYSCgoGZnRfbXNnEAcSCwoHZnRfdXVpZBAI",
            "Eg0KCWZ0X3N0YXR1cxAJIs4CCgtXaXJlTWVzc2FnZRIMCgRuYW1lGAEgASgJ",
            "EhAKCGxvbmduYW1lGAIgASgJEgsKA3NlcRgDIAEoDRIjCgR0eXBlGAQgASgO",
            "MhUuVUZFLldpcmVNZXNzYWdlLlR5cGUSEgoKc2VydmljZV9pZBgFIAEoBRIV",
            "Cg1zdWJzZXJ2aWNlX2lkGAYgASgFEh0KBmZpZWxkcxgHIAMoCzINLlVGRS5V",
            "RkVGaWVsZCKiAQoEVHlwZRINCglzdF9maXhtc2cQABINCglzdF9zeXN0ZW0Q",
            "ARISCg5zdF9zZXJ2aWNlbGlzdBACEhEKDXN0X2RpY3Rpb25hcnkQAxIRCg1z",
            "dF9zeXNzdHJpbmdzEAQSDwoLc3RfcmVzcG9uc2UQBRIMCghzdF9lcnJvchAG",
            "EhEKDXN0X3NlcnZpY2Vsb2cQBxIQCgxzdF9oZWFydGJlYXQQCEICSANiBnBy",
            "b3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::UFE.UFEField), global::UFE.UFEField.Parser, new[]{ "Location", "Type", "Tag", "Ival", "Fval", "Bval", "Sval", "Mval" }, null, new[]{ typeof(global::UFE.UFEField.Types.UFEFieldLocation), typeof(global::UFE.UFEField.Types.UFEFieldType) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::UFE.WireMessage), global::UFE.WireMessage.Parser, new[]{ "Name", "Longname", "Seq", "Type", "ServiceId", "SubserviceId", "Fields" }, null, new[]{ typeof(global::UFE.WireMessage.Types.Type) }, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class UFEField : pb::IMessage<UFEField> {
    private static readonly pb::MessageParser<UFEField> _parser = new pb::MessageParser<UFEField>(() => new UFEField());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UFEField> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::UFE.UfeapiReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UFEField() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UFEField(UFEField other) : this() {
      location_ = other.location_;
      type_ = other.type_;
      tag_ = other.tag_;
      ival_ = other.ival_;
      fval_ = other.fval_;
      bval_ = other.bval_;
      sval_ = other.sval_;
      mval_ = other.mval_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UFEField Clone() {
      return new UFEField(this);
    }

    /// <summary>Field number for the "location" field.</summary>
    public const int LocationFieldNumber = 1;
    private global::UFE.UFEField.Types.UFEFieldLocation location_ = global::UFE.UFEField.Types.UFEFieldLocation.FlBody;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::UFE.UFEField.Types.UFEFieldLocation Location {
      get { return location_; }
      set {
        location_ = value;
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 2;
    private global::UFE.UFEField.Types.UFEFieldType type_ = global::UFE.UFEField.Types.UFEFieldType.FtUnknown;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::UFE.UFEField.Types.UFEFieldType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "tag" field.</summary>
    public const int TagFieldNumber = 3;
    private uint tag_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Tag {
      get { return tag_; }
      set {
        tag_ = value;
      }
    }

    /// <summary>Field number for the "ival" field.</summary>
    public const int IvalFieldNumber = 4;
    private long ival_;
    /// <summary>
    /// ft_int or ft_time
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Ival {
      get { return ival_; }
      set {
        ival_ = value;
      }
    }

    /// <summary>Field number for the "fval" field.</summary>
    public const int FvalFieldNumber = 5;
    private double fval_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Fval {
      get { return fval_; }
      set {
        fval_ = value;
      }
    }

    /// <summary>Field number for the "bval" field.</summary>
    public const int BvalFieldNumber = 6;
    private bool bval_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Bval {
      get { return bval_; }
      set {
        bval_ = value;
      }
    }

    /// <summary>Field number for the "sval" field.</summary>
    public const int SvalFieldNumber = 7;
    private pb::ByteString sval_ = pb::ByteString.Empty;
    /// <summary>
    /// ft_string, ft_char or ft_uuid
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Sval {
      get { return sval_; }
      set {
        sval_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "mval" field.</summary>
    public const int MvalFieldNumber = 8;
    private static readonly pb::FieldCodec<global::UFE.WireMessage> _repeated_mval_codec
        = pb::FieldCodec.ForMessage(66, global::UFE.WireMessage.Parser);
    private readonly pbc::RepeatedField<global::UFE.WireMessage> mval_ = new pbc::RepeatedField<global::UFE.WireMessage>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::UFE.WireMessage> Mval {
      get { return mval_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UFEField);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UFEField other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Location != other.Location) return false;
      if (Type != other.Type) return false;
      if (Tag != other.Tag) return false;
      if (Ival != other.Ival) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Fval, other.Fval)) return false;
      if (Bval != other.Bval) return false;
      if (Sval != other.Sval) return false;
      if(!mval_.Equals(other.mval_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Location != global::UFE.UFEField.Types.UFEFieldLocation.FlBody) hash ^= Location.GetHashCode();
      if (Type != global::UFE.UFEField.Types.UFEFieldType.FtUnknown) hash ^= Type.GetHashCode();
      if (Tag != 0) hash ^= Tag.GetHashCode();
      if (Ival != 0L) hash ^= Ival.GetHashCode();
      if (Fval != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Fval);
      if (Bval != false) hash ^= Bval.GetHashCode();
      if (Sval.Length != 0) hash ^= Sval.GetHashCode();
      hash ^= mval_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Location != global::UFE.UFEField.Types.UFEFieldLocation.FlBody) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Location);
      }
      if (Type != global::UFE.UFEField.Types.UFEFieldType.FtUnknown) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Type);
      }
      if (Tag != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Tag);
      }
      if (Ival != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(Ival);
      }
      if (Fval != 0D) {
        output.WriteRawTag(41);
        output.WriteDouble(Fval);
      }
      if (Bval != false) {
        output.WriteRawTag(48);
        output.WriteBool(Bval);
      }
      if (Sval.Length != 0) {
        output.WriteRawTag(58);
        output.WriteBytes(Sval);
      }
      mval_.WriteTo(output, _repeated_mval_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Location != global::UFE.UFEField.Types.UFEFieldLocation.FlBody) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Location);
      }
      if (Type != global::UFE.UFEField.Types.UFEFieldType.FtUnknown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (Tag != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Tag);
      }
      if (Ival != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Ival);
      }
      if (Fval != 0D) {
        size += 1 + 8;
      }
      if (Bval != false) {
        size += 1 + 1;
      }
      if (Sval.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Sval);
      }
      size += mval_.CalculateSize(_repeated_mval_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UFEField other) {
      if (other == null) {
        return;
      }
      if (other.Location != global::UFE.UFEField.Types.UFEFieldLocation.FlBody) {
        Location = other.Location;
      }
      if (other.Type != global::UFE.UFEField.Types.UFEFieldType.FtUnknown) {
        Type = other.Type;
      }
      if (other.Tag != 0) {
        Tag = other.Tag;
      }
      if (other.Ival != 0L) {
        Ival = other.Ival;
      }
      if (other.Fval != 0D) {
        Fval = other.Fval;
      }
      if (other.Bval != false) {
        Bval = other.Bval;
      }
      if (other.Sval.Length != 0) {
        Sval = other.Sval;
      }
      mval_.Add(other.mval_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Location = (global::UFE.UFEField.Types.UFEFieldLocation) input.ReadEnum();
            break;
          }
          case 16: {
            Type = (global::UFE.UFEField.Types.UFEFieldType) input.ReadEnum();
            break;
          }
          case 24: {
            Tag = input.ReadUInt32();
            break;
          }
          case 32: {
            Ival = input.ReadInt64();
            break;
          }
          case 41: {
            Fval = input.ReadDouble();
            break;
          }
          case 48: {
            Bval = input.ReadBool();
            break;
          }
          case 58: {
            Sval = input.ReadBytes();
            break;
          }
          case 66: {
            mval_.AddEntriesFrom(input, _repeated_mval_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the UFEField message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum UFEFieldLocation {
        /// <summary>
        /// default to body
        /// </summary>
        [pbr::OriginalName("fl_body")] FlBody = 0,
        [pbr::OriginalName("fl_header")] FlHeader = 1,
        [pbr::OriginalName("fl_trailer")] FlTrailer = 2,
        /// <summary>
        /// not included in a FIX message
        /// </summary>
        [pbr::OriginalName("fl_system")] FlSystem = 3,
      }

      public enum UFEFieldType {
        /// <summary>
        /// default
        /// </summary>
        [pbr::OriginalName("ft_unknown")] FtUnknown = 0,
        [pbr::OriginalName("ft_int")] FtInt = 1,
        [pbr::OriginalName("ft_char")] FtChar = 2,
        [pbr::OriginalName("ft_double")] FtDouble = 3,
        [pbr::OriginalName("ft_string")] FtString = 4,
        [pbr::OriginalName("ft_bool")] FtBool = 5,
        [pbr::OriginalName("ft_time")] FtTime = 6,
        [pbr::OriginalName("ft_msg")] FtMsg = 7,
        /// <summary>
        /// from here is non-FIX
        /// </summary>
        [pbr::OriginalName("ft_uuid")] FtUuid = 8,
        /// <summary>
        /// ufeed status code
        /// </summary>
        [pbr::OriginalName("ft_status")] FtStatus = 9,
      }

    }
    #endregion

  }

  public sealed partial class WireMessage : pb::IMessage<WireMessage> {
    private static readonly pb::MessageParser<WireMessage> _parser = new pb::MessageParser<WireMessage>(() => new WireMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<WireMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::UFE.UfeapiReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WireMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WireMessage(WireMessage other) : this() {
      name_ = other.name_;
      longname_ = other.longname_;
      seq_ = other.seq_;
      type_ = other.type_;
      serviceId_ = other.serviceId_;
      subserviceId_ = other.subserviceId_;
      fields_ = other.fields_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WireMessage Clone() {
      return new WireMessage(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "longname" field.</summary>
    public const int LongnameFieldNumber = 2;
    private string longname_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Longname {
      get { return longname_; }
      set {
        longname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "seq" field.</summary>
    public const int SeqFieldNumber = 3;
    private uint seq_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Seq {
      get { return seq_; }
      set {
        seq_ = value;
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 4;
    private global::UFE.WireMessage.Types.Type type_ = global::UFE.WireMessage.Types.Type.StFixmsg;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::UFE.WireMessage.Types.Type Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "service_id" field.</summary>
    public const int ServiceIdFieldNumber = 5;
    private int serviceId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ServiceId {
      get { return serviceId_; }
      set {
        serviceId_ = value;
      }
    }

    /// <summary>Field number for the "subservice_id" field.</summary>
    public const int SubserviceIdFieldNumber = 6;
    private int subserviceId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SubserviceId {
      get { return subserviceId_; }
      set {
        subserviceId_ = value;
      }
    }

    /// <summary>Field number for the "fields" field.</summary>
    public const int FieldsFieldNumber = 7;
    private static readonly pb::FieldCodec<global::UFE.UFEField> _repeated_fields_codec
        = pb::FieldCodec.ForMessage(58, global::UFE.UFEField.Parser);
    private readonly pbc::RepeatedField<global::UFE.UFEField> fields_ = new pbc::RepeatedField<global::UFE.UFEField>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::UFE.UFEField> Fields {
      get { return fields_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as WireMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(WireMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Longname != other.Longname) return false;
      if (Seq != other.Seq) return false;
      if (Type != other.Type) return false;
      if (ServiceId != other.ServiceId) return false;
      if (SubserviceId != other.SubserviceId) return false;
      if(!fields_.Equals(other.fields_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Longname.Length != 0) hash ^= Longname.GetHashCode();
      if (Seq != 0) hash ^= Seq.GetHashCode();
      if (Type != global::UFE.WireMessage.Types.Type.StFixmsg) hash ^= Type.GetHashCode();
      if (ServiceId != 0) hash ^= ServiceId.GetHashCode();
      if (SubserviceId != 0) hash ^= SubserviceId.GetHashCode();
      hash ^= fields_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Longname.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Longname);
      }
      if (Seq != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Seq);
      }
      if (Type != global::UFE.WireMessage.Types.Type.StFixmsg) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Type);
      }
      if (ServiceId != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(ServiceId);
      }
      if (SubserviceId != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(SubserviceId);
      }
      fields_.WriteTo(output, _repeated_fields_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Longname.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Longname);
      }
      if (Seq != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Seq);
      }
      if (Type != global::UFE.WireMessage.Types.Type.StFixmsg) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (ServiceId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ServiceId);
      }
      if (SubserviceId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SubserviceId);
      }
      size += fields_.CalculateSize(_repeated_fields_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(WireMessage other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Longname.Length != 0) {
        Longname = other.Longname;
      }
      if (other.Seq != 0) {
        Seq = other.Seq;
      }
      if (other.Type != global::UFE.WireMessage.Types.Type.StFixmsg) {
        Type = other.Type;
      }
      if (other.ServiceId != 0) {
        ServiceId = other.ServiceId;
      }
      if (other.SubserviceId != 0) {
        SubserviceId = other.SubserviceId;
      }
      fields_.Add(other.fields_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Longname = input.ReadString();
            break;
          }
          case 24: {
            Seq = input.ReadUInt32();
            break;
          }
          case 32: {
            Type = (global::UFE.WireMessage.Types.Type) input.ReadEnum();
            break;
          }
          case 40: {
            ServiceId = input.ReadInt32();
            break;
          }
          case 48: {
            SubserviceId = input.ReadInt32();
            break;
          }
          case 58: {
            fields_.AddEntriesFrom(input, _repeated_fields_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the WireMessage message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Type {
        /// <summary>
        /// default
        /// </summary>
        [pbr::OriginalName("st_fixmsg")] StFixmsg = 0,
        [pbr::OriginalName("st_system")] StSystem = 1,
        [pbr::OriginalName("st_servicelist")] StServicelist = 2,
        [pbr::OriginalName("st_dictionary")] StDictionary = 3,
        [pbr::OriginalName("st_sysstrings")] StSysstrings = 4,
        [pbr::OriginalName("st_response")] StResponse = 5,
        [pbr::OriginalName("st_error")] StError = 6,
        [pbr::OriginalName("st_servicelog")] StServicelog = 7,
        [pbr::OriginalName("st_heartbeat")] StHeartbeat = 8,
      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
